@using WebApplicationCS.Models

@model System.Collections.Generic.IEnumerable<Car>

@{
    var grid = Html.DevExpress().GridView<Car>(settings => {
        settings.Name = "gridView";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "GridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "GridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "GridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.EditFormColumnCount = 1;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFields(m => m.ID);

        settings.Columns.Add(m => m.TradeMark, column => {
            column.EditFormSettings.VisibleIndex = 0;
        });
        settings.Columns.Add(m => m.Model, column => {
            column.EditFormSettings.VisibleIndex = 1;
        });
        settings.Columns.Add(m => m.RtfContent, column => {
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditFormSettings.VisibleIndex = 2;
            column.SetEditItemTemplateContent(tc => {
                RichEditModel reModel = new RichEditModel();
                if (!tc.Grid.IsNewRowEditing) {
                    reModel.documentID = RichEditHelper.GetDocumentID(tc.KeyValue.ToString());
                    reModel.rtfContent = DataBinder.Eval(tc.DataItem, "RtfContent").ToString();
                }
                else {
                    reModel.documentID = RichEditHelper.GetDocumentID("");
                    reModel.rtfContent = "";
                }
                Html.RenderPartial("_RichEditPartial", reModel);
            });
        });
        settings.AfterPerformCallback = (sender, e) => {
            if (e.CallbackName == "ADDNEWROW" || e.CallbackName == "STARTEDIT" || e.CallbackName == "CANCELEDIT") {
                RichEditHelper.CloseUnnecessaryDocuments();
            }
        };
    });
    if (ViewData["EditError"] != null) {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()